使用
Sample01_1-基本使用
Sample01_2-附加图片
Sample01_1_2-基本使用,删除工作簿操作代码上不同

读取Excel的内容
Sample02_1-基本使用
Sample02_1_2-使用了kv类型
Sample02_1_2-使用了kv类型,多个属性同个数据源,但是mustInset值不一样
Sample02_2-支持 System.ComponentModel.DataAnnotations
Sample02_3-内置Attribute的示例
Sample02_4-当excel列名字重复时,按顺序映射到对应model属性中
Sample02_5-GetList()时可以获得模版数据检测提示.
Sample02_6-新增GetDataTable()
Sample02_7-GetList()支持标题列名字重复
Sample02_8-GetList()数据源的数据存在错误时,查看给出的消息提示

填充数据与数据源同步(未测试完全),不推荐用
Sample03_1-普通单元格_单行单列
Sample03_1_2-普通单元格_单行多列
Sample03_2-复杂单元格

自动初始化填充配置
Sample04_1-给定字符串,返回配置项
Sample04_2-简单使用
Sample04_3-处理多个worksheet



==============简化一些代码的记录==============
1.
configSource.Body.ConfigList = new List<EPPlusConfigSourceBodyConfig>()
{
    new EPPlusConfigSourceBodyConfig
    {
        Nth = 1,
        Option = new EPPlusConfigSourceBodyOption()
        {
            DataSource = GetDataTable_Body()
        }
    }
};

或 
configSource.SheetBody[1] =  GetDataTable_Body()
直接写成
configSource.Body[1].Option.DataSource = GetDataTable_Body()


2.
EPPlusHelper.SetConfigSourceHead(configSource, dtHead);
或
configSource.Body[1].Option.ConfigExtra = EPPlusConfigSourceConfigExtras.ConvertToConfigExtraList(dictSummary)
直接写成
configSource.Body[1].Option.DataSource = dictSummary

3.
configSource.SheetHead.Add("月度报表", $"{para.Year}年{para.Month}月报表");
直接写成
configSource.Head["月度报表"]= $"{para.Year}年{para.Month}月报表";

4.

config.SheetBodyCellCustomSetValue.Add(1, (colName, val, cell) =>
{
    if (colName == "原币金额")
    {
        cell.Formula = (string)val;
    }
    else
    {
        cell.Value = val;
    }
});

直接写成
config.Body[1].Option.CustomSetValue = (colName, val, cell) =>
{
    cell.Value = val;
    if (colName == "凭证摘要" && val.ToString().Length > 40)
    {
        //cell.Style.Font.Color.SetColor(Color.Red); //字体颜色
        cell.Value = val.ToString().Substring(0, 40);
    }
};
